% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pred_stacked_regression.R
\name{pred_stacked_regression}
\alias{pred_stacked_regression}
\title{Perform Stacked Regression on Existing Prediction Models}
\usage{
pred_stacked_regression(
  x,
  positivity_constraint = FALSE,
  newdata,
  binary_outcome = NULL,
  survival_time = NULL,
  event_indicator = NULL,
  time_horizon = NULL
)
}
\arguments{
\item{x}{an object of class "\code{predinfo}" produced by calling
\code{\link{pred_input_info}} containing information on at least two
existing prediction models.}

\item{positivity_constraint}{TRUE/FALSE denoting if the weights within the
stacked regression model should be constrained to be non-negative (TRUE) or
should be allowed to take any value (FALSE). See details}

\item{newdata}{data.frame upon which the prediction models should be
aggregated}

\item{binary_outcome}{Character variable giving the name of the column in
\code{newdata} that represents the observed outcomes. Only relevant for
\code{model_type}="logistic"; leave as \code{NULL} otherwise.}

\item{survival_time}{Character variable giving the name of the column in
\code{newdata} that represents the observed survival times. Only relevant
for \code{model_type}="survival"; leave as \code{NULL} otherwise.}

\item{event_indicator}{Character variable giving the name of the column in
\code{newdata} that represents the observed survival indicator (1 for
event, 0 for censoring). Only relevant for \code{model_type}="survival";
leave as \code{NULL} otherwise.}

\item{time_horizon}{for survival models, an integer giving the time horizon
(post baseline/time of prediction) at which a prediction is required.
Currently, this must match a time in x$baselinehazard.}
}
\value{
A object of class "predinfo" with subclass"\code{predSR}". This is
the same as that detailed in \code{\link{pred_input_info}}, with the added
element containing the estimates of the meta-model obtained by stacked
regression.
}
\description{
This function takes a set of existing prediction models, and uses the new
dataset to combine/aggregate them into a single 'meta-model', as described in
Debray et al. 2014.
}
\details{
The aim of this function is to take a set of (previously estimated)
prediction models that were each originally developed for the same
prediction task, and pool/aggregate these into a single prediction model
(meta-model) using stacked regression based on new data (data not used to
develop any of the existing models). The methodological details can be
found in Debray et al. 2014.

Given that the existing models are likely to be highly co-linear (since
they were each developed for the same prediction task), it has been
suggested to impose a positivity constraint on the weights of the stacked
regression model (Debray et al. 2014.). If \code{positivity_constraint} is
set to TRUE, then the stacked regression model will be estimated by
optimising the (log-)likelihood of a logistic regression model using bound
constrained optimization ("L-BFGS-B" in \code{stats::optim()}).
}
\examples{
model3 <- pred_input_info(model_type = "logistic",
                          model_info = SYNPM$Existing_models)
SR <- pred_stacked_regression(x = model3,
                              newdata = SYNPM$ValidationData,
                              binary_outcome = "Y")
print(SR)
summary(SR)
#one could then validate this as follows (but note this should be adjusted for in-sample optimism)
pred_validate(pred_input_info(model_type = "logistic",
                              model_info = SR$Aggregated_Coefs,
                              newdata = SYNPM$ValidationData,
                              binary_outcome = "Y"))

}
\references{
Debray, T.P., Koffijberg, H., Nieboer, D., Vergouwe, Y.,
Steyerberg, E.W. and Moons, K.G. (2014), Meta-analysis and aggregation of
multiple published prediction models. \emph{Statistics in Medicine}, 33:
2341-2362
}
