% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pred_input_info.R
\name{pred_input_info}
\alias{pred_input_info}
\title{Input information about an existing prediction model}
\usage{
pred_input_info(
  model_type = c("logistic", "survival"),
  model_info,
  baselinehazard = NULL
)
}
\arguments{
\item{model_type}{specifies the type of model that the existing prediction
model is based on; possible options are: \itemize{ \item {\code{"logistic"}
indicates that the existing model was based on a logistic regression model
(default)} \item {\code{"survival"} indicates that the existing model was
based on a survival regression model} } If multiple models are being
entered (i.e., if \code{M}>1), then note that all such model need to be of
the same type.}

\item{model_info}{a data.frame that contains the coefficients of the existing
prediction model(s). Each column should be a predictor variable (with the
name being the name of said predictor variable as specified in
\code{newdata}), with the values being the coefficients, taken exactly as
published from the existing prediction model(s). Multiple existing
prediction models should be specified by entering multiple rows. If a
predictor variable is not present in a given model then enter that cell of
the data.frame as NA. See examples below.}

\item{baselinehazard}{A data.frame with two columns: (1) time, and (2)
estimated baseline hazard at that time. Only relevant if \code{model_type}
is "survival"; leave as NULL otherwise.}
}
\value{
\code{\link{pred_input_info}} returns an object of class "predinfo",
with child classes per model_type. This is a standardised format, such that
it can be used with other functions in the package. An object of class
"predinfo" is a list containing at least the following components:
\itemize{ \item{model_type = this is the type of analytical model that the
existing prediction model is based upon ("logistic" or "survival")}
\item{coefs = this is the list of (previously estimated) coefficients for
each predictor variable} \item{coef_names = gives the names of each
predictor variable} \item{PredictionData = this is the data formed by any
subsequent predictions/model updating/ model aggregation will be based on
this data.} \item{Outcomes = vector of outcomes/endpoints (if specified in
the input).} }
}
\description{
Input relevant information about one or multiple existing prediction model
(i.e. the functional form and published coefficients), and a new dataset, to
create a standardised 'blueprint' for further evaluation.
}
\details{
This function will structure the relevant information (detailed
below) about one or more existing prediction model into a standardised
format, such that it can be used with other functions in the package.

First, the existing prediction model(s) will have a functional form (i.e.
the linear predictor of the model); unless otherwise stated by
\code{formula}, this will be taken as being a linear combination of the
variables specified by the columns of \code{model_info}.

Second, each of the predictor variables of the existing prediction
model(s) will have a published coefficient (e.g. log-odds-ratio or
log-hazard-ratio), which should each be given as the values in
\code{model_info}. If entering information about multiple existing
prediction models, then \code{model_info} will contain multiple rows (one
per existing model). Here, if a given model does not contain a predictor
variable that is included in another model, then set as NA; see examples of
this below.

In the case of \code{model_type} = "logistic", then \code{model_info} must
contain a column named as "Intercept", which gives the intercept
coefficient of each of the existing logistic regression models (taken
exactly as previously published). If \code{model_type} = "survival", then
\code{baselinehazard} should be provided and no "Intercept" column is
needed in \code{model_info}.
}
\examples{
#Example 1 - logistic regression existing model; uses
#            an example dataset within the package
pred_input_info(model_type = "logistic",
                model_info = SYNPM$Existing_models[1,])

#Example 2 - survival model example; uses an example dataset within the
#             package.
pred_input_info(model_type = "survival",
                model_info = data.frame("SEX_M" = 0.53,
                                        "AGE" = -0.05,
                                        "SYSTBP" = -0.0055,
                                        "BMIO" = 0.0325,
                                        "CARDIAC" = -0.126,
                                        "DIABETES" = -0.461),
                 baselinehazard = data.frame("t" = 1:5,
                                             "h" = c(0.12, 0.20, 0.26, 0.33, 0.38)))

#Example 3 - Input information about multiple models
pred_input_info(model_type = "logistic",
                model_info = SYNPM$Existing_models)

}
